it 'should respect the current umask for relative modes' do
  old_umask = File.umask
  File.umask(0000)
  Util::File.file_mode_to_i('o=').must_equal 0660
  File.umask(0246)
  Util::File.file_mode_to_i('o=').must_equal 0420
  File.umask(old_umask)
end

it 'should respect the current umask for relative modes' do
  old_umask = File.umask
  File.umask(0000)
  Util::File.dir_mode_to_i('o=').must_equal 0770
  File.umask(0246)
  Util::File.dir_mode_to_i('o=').must_equal 0530
  File.umask(old_umask)
end

def owner=(owner)
  if owner.is_a?(String)
    if owner.count(':') > 1
      fail ArgumentError, "Invalid owner: '#{owner}'"
    end
    @owner, @group = owner.split(':')
  else
    @owner = owner
  end
end

describe '#owner=' do
  it 'should raise exceptions for invalid owner strings' do
    proc do
      @file_permissions.owner = 'foo:bar:baz'
    end.must_raise ArgumentError
  end

  it 'should support owner:group notation' do
    @file_permissions.owner = 'owner:group'
    @file_permissions.owner.must_equal 'owner'
    @file_permissions.group.must_equal 'group'
  end
end
